{"version":3,"sources":["App.js","index.js"],"names":["ffmpeg","createFFmpeg","log","App","useState","ready","setReady","video","setVideo","gif","setGif","startSec","setStartSec","endSec","setEndSec","load","a","useEffect","convertToGif","fetchFile","FS","duration","Number","run","String","data","url","URL","createObjectURL","Blob","buffer","type","className","onChange","e","target","files","item","controls","width","src","event","value","onClick","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAIMA,EAASC,uBAAa,CAAEC,KAAK,IAyEpBC,MAvEf,WAAgB,IAAD,EAEaC,oBAAS,GAFtB,mBAENC,EAFM,KAECC,EAFD,OAGaF,qBAHb,mBAGNG,EAHM,KAGCC,EAHD,OAISJ,qBAJT,mBAINK,EAJM,KAIDC,EAJC,OAMmBN,mBAAS,KAN5B,mBAMNO,EANM,KAMIC,EANJ,OAOeR,mBAAS,KAPxB,mBAONS,EAPM,KAOEC,EAPF,KASPC,EAAI,uCAAG,sBAAAC,EAAA,sEACLhB,EAAOe,OADF,OAEXT,GAAS,GAFE,2CAAH,qDAKVW,qBAAU,WACRF,MACC,IAEH,IAAMG,EAAY,uCAAG,gCAAAF,EAAA,kEACnBhB,EADmB,SACsBmB,oBAAUZ,GADhC,+BACZa,GADY,UACT,YAAa,WADJ,MAEfC,EAAWC,OAAOT,GAAQS,OAAOX,GAFlB,SAGbX,EAAOuB,IAAI,KAAK,WAAW,KAAKC,OAAOH,GAAU,MAAMV,EAAS,KAAK,MAAM,WAH9D,OAIbc,EAAOzB,EAAOoB,GAAG,WAAW,WAC5BM,EAAMC,IAAIC,gBAAgB,IAAIC,KAAK,CAACJ,EAAKK,QAAS,CAACC,KAAM,eAC/DrB,EAAOgB,GANY,4CAAH,qDA0BlB,OAAOrB,EACL,sBAAK2B,UAAU,MAAf,UACE,uBAAK,uBADP,yIAE+B,uBAAK,uBAClC,uBAAOD,KAAK,OAAOE,SAAU,SAACC,GAAD,aAAO1B,EAAQ,UAAC0B,EAAEC,OAAOC,aAAV,aAAC,EAAgBC,KAAK,OAClE,uBAAK,uBACH9B,GAAS,uBACG+B,UAAQ,EACRC,MAAM,MACNC,IAAKb,IAAIC,gBAAgBrB,KAGvC,uBAAK,uBAXP,kBAYO,uBAAOwB,KAAK,OAAOE,SAAU,SAAAQ,GAAK,OAAI7B,EAAY6B,EAAMN,OAAOO,UAZtE,SAaE,uBAAK,uBAbP,kBAcO,uBAAOX,KAAK,OAAOE,SAAU,SAAAQ,GAAK,OAAI3B,EAAU2B,EAAMN,OAAOO,UAdpE,SAeE,uBAAK,uBAAK,uBAAK,uBAEf,wBAAQC,QAASzB,EAAjB,iDACA,uBAAK,uBACHT,GAAO,sIAAwB,uBAAK,uBAAK,qBAAKmC,IAAI,GAAGJ,IAAK/B,EAAK8B,MAAM,WACvE,uBAAK,uBAAK,0BAGb,gCAAK,uBAAK,uBAAK,mCAAQ,2CAAiB,uBAAK,uBAA9B,6EAAiD,uBAAK,uBAAtD,+HAA8F,uBAAK,2BCrErHM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.386c7834.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\nconst ffmpeg = createFFmpeg({ log: true });\n\nfunction App() {\n\n  const [ready, setReady] = useState(false);\n  const [video, setVideo] = useState();\n  const [gif, setGif] = useState();\n\n  const [startSec, setStartSec] = useState('0');\n  const [endSec, setEndSec] = useState('3');\n\n  const load = async() => {\n    await ffmpeg.load();\n    setReady(true);\n  }\n\n  useEffect(() => {\n    load();\n  }, [])\n\n  const convertToGif = async() => {\n    ffmpeg.FS('writeFile', 'test.mp4', await fetchFile(video));\n    var duration = Number(endSec)-Number(startSec);\n    await ffmpeg.run('-i','test.mp4','-t',String(duration),'-ss',startSec,'-f','gif','out.gif');\n    const data = ffmpeg.FS('readFile','out.gif');\n    const url = URL.createObjectURL(new Blob([data.buffer], {type: 'image/gif'}));\n    setGif(url);\n  }\n/*\n  function youtubedownload() {\n    const video = youtubedl('http://www.youtube.com/watch?v=90AiXO1pAiA',\n    // Optional arguments passed to youtube-dl.\n    ['--format=18'],\n    // Additional options can be given for calling `child_process.execFile()`.\n    { cwd: __dirname });\n\n    // Will be called when the download starts.\n    video.on('info', function(info) {\n    console.log('Download started')\n    console.log('filename: ' + info._filename)\n    console.log('size: ' + info.size)\n    });\n\n    video.pipe(fs.createWriteStream('myvideo.mp4'));\n  }\n*/\n  return ready ? (\n    <div className=\"App\">\n      <br/><br/>\n      버튼을 클릭하여, PC에 저장된 동영상을 선택해주세요<br/><br/>\n      <input type=\"file\" onChange={(e) => setVideo(e.target.files?.item(0))} />\n      <br/><br/>\n      { video && <video\n                    controls\n                    width=\"400\"\n                    src={URL.createObjectURL(video)}>\n                  </video>}\n\n      <br/><br/>\n      시작 : <input type=\"text\" onChange={event => setStartSec(event.target.value)}/>초\n      <br/><br/>\n      종료 : <input type=\"text\" onChange={event => setEndSec(event.target.value)}/>초\n      <br/><br/><br/><br/>\n\n      <button onClick={convertToGif}>GIF 파일 만들기</button>\n      <br/><br/>\n      { gif && <div>마우스 우측버튼으로 저장 가능합니다<br/><br/><img alt=\"\" src={gif} width=\"400\"/></div> }\n      <br/><br/><br/>\n    </div>\n  ) : \n  (<div><br/><br/><center><p>Loading...</p><br/><br/>폰에서는 실행되지 않습니다<br/><br/>PC용 크롬에 엣지 브라우저에서 실행 가능합니다</center><br/><br/></div>);\n}\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}